# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iPNl3B-GzyML0Ca5QAmqVMKd_1k11GLY
"""

import pandas as pd
import pdfplumber
import re
import matplotlib.pyplot as plt
import streamlit as st

# Function to extract transactions
def extract_transactions_from_pdf(pdf_file):
    transactions = []
    with pdfplumber.open(pdf_file) as pdf:
        for page in pdf.pages:
            text = page.extract_text()
            if not text:
                continue
            lines = text.split("\n")
            for line in lines:
                match = re.match(r"(\d{2}/\d{2}/\d{4})\s+(.+?)\s+(-?\d+\.\d{2})", line)
                if match:
                    date, merchant, amount = match.groups()
                    transactions.append([date, merchant.strip(), float(amount)])
    return pd.DataFrame(transactions, columns=["Date", "Merchant", "Amount"])

# Categorize merchants
def categorize_expenses(df):
    categories = {
        "Food": ["swiggy", "zomato", "dominos", "mcdonald", "pizza"],
        "Shopping": ["amazon", "flipkart", "myntra"],
        "Travel": ["uber", "ola", "irctc", "indigo"],
        "Utilities": ["electricity", "gas", "water", "recharge", "airtel", "jio"],
        "Entertainment": ["netflix", "spotify", "hotstar", "prime"]
    }
    def get_category(merchant):
        m = merchant.lower()
        for cat, keywords in categories.items():
            if any(k in m for k in keywords):
                return cat
        return "Others"
    df["Category"] = df["Merchant"].apply(get_category)
    return df

# Streamlit UI
st.title("üìä Personal Expense Analyzer")
st.write("Upload your **bank/credit card PDF statement** and get instant insights!")

uploaded_file = st.file_uploader("Choose a PDF file", type="pdf")

if uploaded_file:
    df = extract_transactions_from_pdf(uploaded_file)
    if df.empty:
        st.error("‚ö†Ô∏è Could not extract transactions. Please check PDF format.")
    else:
        df = categorize_expenses(df)

        st.subheader("üìë Extracted Transactions")
        st.dataframe(df)

        st.subheader("üí∞ Total Expenses")
        st.write(df["Amount"].sum())

        st.subheader("üìä Expenses by Category")
        st.bar_chart(df.groupby("Category")["Amount"].sum())

        st.subheader("üè¶ Top Merchants")
        st.write(df.groupby("Merchant")["Amount"].sum().sort_values(ascending=False).head())

# Commented out IPython magic to ensure Python compatibility.
# %pip install pdfplumber streamlit